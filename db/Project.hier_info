|Project
CLOCK_50 => CLOCK_50.IN4
KEY[0] => resetn.IN3
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN1
KEY[3] => KEY[3].IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_R[8] <= vga_adapter:VGA.VGA_R
VGA_R[9] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_G[8] <= vga_adapter:VGA.VGA_G
VGA_G[9] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B
VGA_B[8] <= vga_adapter:VGA.VGA_B
VGA_B[9] <= vga_adapter:VGA.VGA_B
LEDR[0] <= datapath:d0.finish_game
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
HEX0[0] <= hex_decoder:H0.segments
HEX0[1] <= hex_decoder:H0.segments
HEX0[2] <= hex_decoder:H0.segments
HEX0[3] <= hex_decoder:H0.segments
HEX0[4] <= hex_decoder:H0.segments
HEX0[5] <= hex_decoder:H0.segments
HEX0[6] <= hex_decoder:H0.segments
HEX1[0] <= hex_decoder:H1.segments
HEX1[1] <= hex_decoder:H1.segments
HEX1[2] <= hex_decoder:H1.segments
HEX1[3] <= hex_decoder:H1.segments
HEX1[4] <= hex_decoder:H1.segments
HEX1[5] <= hex_decoder:H1.segments
HEX1[6] <= hex_decoder:H1.segments
HEX2[0] <= hex_decoder:H2.segments
HEX2[1] <= hex_decoder:H2.segments
HEX2[2] <= hex_decoder:H2.segments
HEX2[3] <= hex_decoder:H2.segments
HEX2[4] <= hex_decoder:H2.segments
HEX2[5] <= hex_decoder:H2.segments
HEX2[6] <= hex_decoder:H2.segments
HEX3[0] <= hex_decoder:H3.segments
HEX3[1] <= hex_decoder:H3.segments
HEX3[2] <= hex_decoder:H3.segments
HEX3[3] <= hex_decoder:H3.segments
HEX3[4] <= hex_decoder:H3.segments
HEX3[5] <= hex_decoder:H3.segments
HEX3[6] <= hex_decoder:H3.segments


|Project|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|Project|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Project|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_m6m1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_m6m1:auto_generated.data_a[0]
data_a[1] => altsyncram_m6m1:auto_generated.data_a[1]
data_a[2] => altsyncram_m6m1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_m6m1:auto_generated.address_a[0]
address_a[1] => altsyncram_m6m1:auto_generated.address_a[1]
address_a[2] => altsyncram_m6m1:auto_generated.address_a[2]
address_a[3] => altsyncram_m6m1:auto_generated.address_a[3]
address_a[4] => altsyncram_m6m1:auto_generated.address_a[4]
address_a[5] => altsyncram_m6m1:auto_generated.address_a[5]
address_a[6] => altsyncram_m6m1:auto_generated.address_a[6]
address_a[7] => altsyncram_m6m1:auto_generated.address_a[7]
address_a[8] => altsyncram_m6m1:auto_generated.address_a[8]
address_a[9] => altsyncram_m6m1:auto_generated.address_a[9]
address_a[10] => altsyncram_m6m1:auto_generated.address_a[10]
address_a[11] => altsyncram_m6m1:auto_generated.address_a[11]
address_a[12] => altsyncram_m6m1:auto_generated.address_a[12]
address_a[13] => altsyncram_m6m1:auto_generated.address_a[13]
address_a[14] => altsyncram_m6m1:auto_generated.address_a[14]
address_b[0] => altsyncram_m6m1:auto_generated.address_b[0]
address_b[1] => altsyncram_m6m1:auto_generated.address_b[1]
address_b[2] => altsyncram_m6m1:auto_generated.address_b[2]
address_b[3] => altsyncram_m6m1:auto_generated.address_b[3]
address_b[4] => altsyncram_m6m1:auto_generated.address_b[4]
address_b[5] => altsyncram_m6m1:auto_generated.address_b[5]
address_b[6] => altsyncram_m6m1:auto_generated.address_b[6]
address_b[7] => altsyncram_m6m1:auto_generated.address_b[7]
address_b[8] => altsyncram_m6m1:auto_generated.address_b[8]
address_b[9] => altsyncram_m6m1:auto_generated.address_b[9]
address_b[10] => altsyncram_m6m1:auto_generated.address_b[10]
address_b[11] => altsyncram_m6m1:auto_generated.address_b[11]
address_b[12] => altsyncram_m6m1:auto_generated.address_b[12]
address_b[13] => altsyncram_m6m1:auto_generated.address_b[13]
address_b[14] => altsyncram_m6m1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m6m1:auto_generated.clock0
clock1 => altsyncram_m6m1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_m6m1:auto_generated.q_b[0]
q_b[1] <= altsyncram_m6m1:auto_generated.q_b[1]
q_b[2] <= altsyncram_m6m1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|Project|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|Project|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|Project|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|Project|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|Project|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|Project|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|Project|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Project|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|Project|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|Project|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Project|datapath:d0
clk => y[0].CLK
clk => y[1].CLK
clk => y[2].CLK
clk => y[3].CLK
clk => y[4].CLK
clk => y[5].CLK
clk => y[6].CLK
clk => x[0].CLK
clk => x[1].CLK
clk => x[2].CLK
clk => x[3].CLK
clk => x[4].CLK
clk => x[5].CLK
clk => x[6].CLK
clk => x[7].CLK
clk => color[0].CLK
clk => color[1].CLK
clk => color[2].CLK
clk => dir.CLK
clk => y_menu[0].CLK
clk => y_menu[1].CLK
clk => y_menu[2].CLK
clk => y_menu[3].CLK
clk => y_menu[4].CLK
clk => y_menu[5].CLK
clk => y_menu[6].CLK
clk => x_menu[0].CLK
clk => x_menu[1].CLK
clk => x_menu[2].CLK
clk => x_menu[3].CLK
clk => x_menu[4].CLK
clk => x_menu[5].CLK
clk => x_menu[6].CLK
clk => x_menu[7].CLK
clk => y_ground[0].CLK
clk => y_ground[1].CLK
clk => y_ground[2].CLK
clk => y_ground[3].CLK
clk => y_ground[4].CLK
clk => y_ground[5].CLK
clk => y_ground[6].CLK
clk => y_orig[0].CLK
clk => y_orig[1].CLK
clk => y_orig[2].CLK
clk => y_orig[3].CLK
clk => y_orig[4].CLK
clk => y_orig[5].CLK
clk => y_orig[6].CLK
clk => x_orig[0].CLK
clk => x_orig[1].CLK
clk => x_orig[2].CLK
clk => x_orig[3].CLK
clk => x_orig[4].CLK
clk => x_orig[5].CLK
clk => x_orig[6].CLK
clk => x_orig[7].CLK
clk => menu_count[0].CLK
clk => menu_count[1].CLK
clk => menu_count[2].CLK
clk => menu_count[3].CLK
clk => menu_count[4].CLK
clk => finish_erase~reg0.CLK
clk => top_bound.CLK
clk => one_cycle.CLK
clk => finish_game~reg0.CLK
clk => erase_y[0].CLK
clk => erase_y[1].CLK
clk => erase_y[2].CLK
clk => erase_y[3].CLK
clk => erase_y[4].CLK
clk => erase_y[5].CLK
clk => erase_y[6].CLK
clk => erase_x[0].CLK
clk => erase_x[1].CLK
clk => erase_x[2].CLK
clk => erase_x[3].CLK
clk => erase_x[4].CLK
clk => erase_x[5].CLK
clk => erase_x[6].CLK
clk => erase_x[7].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => obstacle[0].CLK
clk => obstacle[1].CLK
clk => obstacle[2].CLK
clk => obstacle[3].CLK
clk => obstacle[4].CLK
clk => obstacle[5].CLK
clk => obstacle[6].CLK
clk => count_ground[0].CLK
clk => count_ground[1].CLK
clk => count_ground[2].CLK
clk => count_ground[3].CLK
clk => count_ground[4].CLK
clk => count_ground[5].CLK
clk => count_ground[6].CLK
clk => count_ground[7].CLK
clk => finish_erase_box.CLK
clk => finish_ground~reg0.CLK
clk => update_box.CLK
clk => box_frame_counter[0].CLK
clk => box_frame_counter[1].CLK
clk => box_frame_counter[2].CLK
clk => box_frame_counter[3].CLK
clk => box_frame_counter[4].CLK
clk => box_frame_counter[5].CLK
clk => box_frame_counter[6].CLK
clk => box_frame_counter[7].CLK
clk => box_frame_counter[8].CLK
clk => box_frame_counter[9].CLK
clk => box_frame_counter[10].CLK
clk => box_frame_counter[11].CLK
clk => box_frame_counter[12].CLK
clk => box_frame_counter[13].CLK
clk => box_frame_counter[14].CLK
clk => box_frame_counter[15].CLK
clk => box_frame_counter[16].CLK
clk => box_frame_counter[17].CLK
clk => box_frame_counter[18].CLK
clk => box_frame_counter[19].CLK
clk => box_frame_counter[20].CLK
clk => box_frame_counter[21].CLK
clk => box_frame_counter[22].CLK
clk => box_frame_counter[23].CLK
clk => box_frame_counter[24].CLK
clk => box_frame_counter[25].CLK
clk => box_frame_counter[26].CLK
clk => box_frame_counter[27].CLK
clk => constant[0].CLK
clk => constant[1].CLK
clk => constant[2].CLK
clk => constant[3].CLK
clk => constant[4].CLK
clk => constant[5].CLK
clk => constant[6].CLK
clk => box_y_orig[0].CLK
clk => box_y_orig[1].CLK
clk => box_y_orig[2].CLK
clk => box_y_orig[3].CLK
clk => box_y_orig[4].CLK
clk => box_y_orig[5].CLK
clk => box_y_orig[6].CLK
clk => box_x_orig[0].CLK
clk => box_x_orig[1].CLK
clk => box_x_orig[2].CLK
clk => box_x_orig[3].CLK
clk => box_x_orig[4].CLK
clk => box_x_orig[5].CLK
clk => box_x_orig[6].CLK
clk => box_x_orig[7].CLK
clk => score[0]~reg0.CLK
clk => score[1]~reg0.CLK
clk => score[2]~reg0.CLK
clk => score[3]~reg0.CLK
clk => score[4]~reg0.CLK
clk => score[5]~reg0.CLK
clk => score[6]~reg0.CLK
clk => score[7]~reg0.CLK
clk => score_counter[0].CLK
clk => score_counter[1].CLK
clk => score_counter[2].CLK
clk => score_counter[3].CLK
clk => score_counter[4].CLK
clk => score_counter[5].CLK
clk => score_counter[6].CLK
clk => score_counter[7].CLK
clk => score_counter[8].CLK
clk => score_counter[9].CLK
clk => score_counter[10].CLK
clk => score_counter[11].CLK
clk => score_counter[12].CLK
clk => score_counter[13].CLK
clk => score_counter[14].CLK
clk => score_counter[15].CLK
clk => score_counter[16].CLK
clk => score_counter[17].CLK
clk => score_counter[18].CLK
clk => score_counter[19].CLK
clk => score_counter[20].CLK
clk => score_counter[21].CLK
clk => score_counter[22].CLK
clk => score_counter[23].CLK
clk => score_counter[24].CLK
clk => score_counter[25].CLK
clk => score_counter[26].CLK
clk => score_counter[27].CLK
clk => enable_count_obstacle.CLK
clk => start_obstacle.CLK
clk => is_moving_box.CLK
clk => is_jump~reg0.CLK
clk => dino_counter_value[0].CLK
clk => dino_counter_value[1].CLK
clk => dino_counter_value[2].CLK
clk => dino_counter_value[3].CLK
clk => dino_counter_value[4].CLK
clk => dino_counter_value[5].CLK
clk => dino_counter_value[6].CLK
clk => dino_counter_value[7].CLK
clk => dino_counter_value[8].CLK
clk => dino_counter_value[9].CLK
clk => dino_counter_value[10].CLK
clk => dino_counter_value[11].CLK
clk => dino_counter_value[12].CLK
clk => dino_counter_value[13].CLK
clk => dino_counter_value[14].CLK
clk => dino_counter_value[15].CLK
clk => dino_counter_value[16].CLK
clk => dino_counter_value[17].CLK
clk => dino_counter_value[18].CLK
clk => dino_counter_value[19].CLK
clk => dino_counter_value[20].CLK
clk => dino_counter_value[21].CLK
clk => dino_counter_value[22].CLK
clk => dino_counter_value[23].CLK
clk => dino_counter_value[24].CLK
clk => dino_counter_value[25].CLK
clk => dino_counter_value[26].CLK
clk => dino_counter_value[27].CLK
clk => frame_counter_value[0].CLK
clk => frame_counter_value[1].CLK
clk => frame_counter_value[2].CLK
clk => frame_counter_value[3].CLK
clk => frame_counter_value[4].CLK
clk => frame_counter_value[5].CLK
clk => frame_counter_value[6].CLK
clk => frame_counter_value[7].CLK
clk => frame_counter_value[8].CLK
clk => frame_counter_value[9].CLK
clk => frame_counter_value[10].CLK
clk => frame_counter_value[11].CLK
clk => frame_counter_value[12].CLK
clk => frame_counter_value[13].CLK
clk => frame_counter_value[14].CLK
clk => frame_counter_value[15].CLK
clk => frame_counter_value[16].CLK
clk => frame_counter_value[17].CLK
clk => frame_counter_value[18].CLK
clk => frame_counter_value[19].CLK
clk => frame_counter_value[20].CLK
clk => frame_counter_value[21].CLK
clk => frame_counter_value[22].CLK
clk => frame_counter_value[23].CLK
clk => frame_counter_value[24].CLK
clk => frame_counter_value[25].CLK
clk => frame_counter_value[26].CLK
clk => frame_counter_value[27].CLK
ld_x => x_orig[0].ENA
ld_x => x_orig[1].ENA
ld_x => x_orig[2].ENA
ld_x => x_orig[3].ENA
ld_x => x_orig[4].ENA
ld_x => x_orig[5].ENA
ld_x => x_orig[6].ENA
ld_x => x_orig[7].ENA
ld_y => y_orig.OUTPUTSELECT
ld_y => y_orig.OUTPUTSELECT
ld_y => y_orig.OUTPUTSELECT
ld_y => y_orig.OUTPUTSELECT
ld_y => y_orig.OUTPUTSELECT
ld_y => y_orig.OUTPUTSELECT
ld_y => y_orig.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => x.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => y.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => obstacle.OUTPUTSELECT
draw => finish_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => count_ground.OUTPUTSELECT
draw => finish_erase.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_y.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => erase_x.OUTPUTSELECT
draw => color.OUTPUTSELECT
draw => color.OUTPUTSELECT
draw => color.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => x.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => y.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => obstacle.OUTPUTSELECT
shape => color.OUTPUTSELECT
shape => count.OUTPUTSELECT
shape => count.OUTPUTSELECT
shape => count.OUTPUTSELECT
shape => count.OUTPUTSELECT
shape => count.OUTPUTSELECT
menu_enable => menu_count[0].ENA
menu_enable => menu_count[1].ENA
menu_enable => menu_count[2].ENA
menu_enable => menu_count[3].ENA
menu_enable => menu_count[4].ENA
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
frame_counter => frame_counter_value.OUTPUTSELECT
reset_n => finish_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => count_ground.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => obstacle.OUTPUTSELECT
reset_n => count.OUTPUTSELECT
reset_n => count.OUTPUTSELECT
reset_n => count.OUTPUTSELECT
reset_n => count.OUTPUTSELECT
reset_n => count.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_x.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => erase_y.OUTPUTSELECT
reset_n => finish_game.OUTPUTSELECT
reset_n => one_cycle.OUTPUTSELECT
reset_n => top_bound.OUTPUTSELECT
reset_n => is_jump.OUTPUTSELECT
reset_n => is_moving_box.OUTPUTSELECT
reset_n => start_obstacle.OUTPUTSELECT
reset_n => enable_count_obstacle.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score_counter.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => score.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => frame_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => dino_counter_value.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_x_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_y_orig.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => box_frame_counter.OUTPUTSELECT
reset_n => update_box.OUTPUTSELECT
reset_n => constant[0].ENA
reset_n => finish_erase_box.ENA
reset_n => constant[1].ENA
reset_n => constant[2].ENA
reset_n => constant[3].ENA
reset_n => constant[4].ENA
reset_n => constant[5].ENA
reset_n => constant[6].ENA
is_erase => color.OUTPUTSELECT
is_erase => color.OUTPUTSELECT
is_erase => color.OUTPUTSELECT
is_erase => finish_erase.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_y.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => erase_x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => x.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => y.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_erase => obstacle.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
is_change => y_orig.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
dino_frame_counter => dino_counter_value.OUTPUTSELECT
draw_ground => finish_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => count_ground.OUTPUTSELECT
draw_ground => color.OUTPUTSELECT
draw_ground => color.OUTPUTSELECT
draw_ground => color.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => x.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => y.OUTPUTSELECT
draw_ground => finish_erase.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_y.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => erase_x.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
draw_ground => obstacle.OUTPUTSELECT
jump => is_jump.OUTPUTSELECT
jump => is_moving_box.OUTPUTSELECT
jump => start_obstacle.OUTPUTSELECT
jump => enable_count_obstacle.OUTPUTSELECT
random[0] => Add6.IN56
random[0] => Add5.IN33
random[1] => Add6.IN55
random[1] => Add5.IN32
random[2] => Add6.IN54
random[2] => Add5.IN31
random[3] => ~NO_FANOUT~
enable_count_ground => color.OUTPUTSELECT
enable_count_ground => color.OUTPUTSELECT
enable_count_ground => color.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => x.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => y.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
enable_count_ground => count_ground.OUTPUTSELECT
ld_ground => y_ground[0].ENA
ld_ground => y_ground[1].ENA
ld_ground => y_ground[2].ENA
ld_ground => y_ground[3].ENA
ld_ground => y_ground[4].ENA
ld_ground => y_ground[5].ENA
ld_ground => y_ground[6].ENA
color_in[0] => color.DATAB
color_in[1] => color.DATAB
color_in[2] => color.DATAB
ld_menu => y_menu[0].ENA
ld_menu => y_menu[1].ENA
ld_menu => y_menu[2].ENA
ld_menu => y_menu[3].ENA
ld_menu => y_menu[4].ENA
ld_menu => y_menu[5].ENA
ld_menu => y_menu[6].ENA
ld_menu => x_menu[0].ENA
ld_menu => x_menu[1].ENA
ld_menu => x_menu[2].ENA
ld_menu => x_menu[3].ENA
ld_menu => x_menu[4].ENA
ld_menu => x_menu[5].ENA
ld_menu => x_menu[6].ENA
ld_menu => x_menu[7].ENA
draw_menu => color.OUTPUTSELECT
draw_menu => color.OUTPUTSELECT
draw_menu => color.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => x.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
draw_menu => y.OUTPUTSELECT
finish_menu <= <GND>
finish_ground <= finish_ground~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_out[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
x_out[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
x_out[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
x_out[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
x_out[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
x_out[5] <= x[5].DB_MAX_OUTPUT_PORT_TYPE
x_out[6] <= x[6].DB_MAX_OUTPUT_PORT_TYPE
x_out[7] <= x[7].DB_MAX_OUTPUT_PORT_TYPE
y_out[0] <= y[0].DB_MAX_OUTPUT_PORT_TYPE
y_out[1] <= y[1].DB_MAX_OUTPUT_PORT_TYPE
y_out[2] <= y[2].DB_MAX_OUTPUT_PORT_TYPE
y_out[3] <= y[3].DB_MAX_OUTPUT_PORT_TYPE
y_out[4] <= y[4].DB_MAX_OUTPUT_PORT_TYPE
y_out[5] <= y[5].DB_MAX_OUTPUT_PORT_TYPE
y_out[6] <= y[6].DB_MAX_OUTPUT_PORT_TYPE
color_out[0] <= color[0].DB_MAX_OUTPUT_PORT_TYPE
color_out[1] <= color[1].DB_MAX_OUTPUT_PORT_TYPE
color_out[2] <= color[2].DB_MAX_OUTPUT_PORT_TYPE
finish_dino <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
finish_game <= finish_game~reg0.DB_MAX_OUTPUT_PORT_TYPE
finish_obstacle <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
finish_erase <= finish_erase~reg0.DB_MAX_OUTPUT_PORT_TYPE
frame_updated <= <GND>
is_jump <= is_jump~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[0] <= score[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[1] <= score[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[2] <= score[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[3] <= score[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[4] <= score[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[5] <= score[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[6] <= score[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[7] <= score[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Project|control:c0
clk => current_state~1.DATAIN
reset_n => current_state.OUTPUTSELECT
reset_n => current_state.OUTPUTSELECT
reset_n => current_state.OUTPUTSELECT
reset_n => current_state.OUTPUTSELECT
reset_n => current_state.OUTPUTSELECT
reset_n => current_state.OUTPUTSELECT
reset_n => current_state.OUTPUTSELECT
go => Selector4.IN3
go => Selector8.IN2
go => Selector8.IN3
go => Selector10.IN0
start_menu => Selector4.IN4
start_menu => Selector6.IN2
finish_obstacle => ~NO_FANOUT~
finish_dino => Selector2.IN1
finish_dino => Selector0.IN2
finish_ground => Selector0.IN5
finish_ground => Selector6.IN3
frame_updated => ~NO_FANOUT~
finish_erase => Selector1.IN1
finish_erase => Selector3.IN1
finish_erase => Selector5.IN1
finish_erase => Selector7.IN1
finish_erase => Selector9.IN2
finish_erase => Selector11.IN2
finish_erase => next_state.change_x_y_139.LATCH_ENABLE
is_jump => next_state.change_x_y_139.DATAIN
is_jump => Selector0.IN3
finish_menu => ~NO_FANOUT~
ld_x <= ld_x.DB_MAX_OUTPUT_PORT_TYPE
ld_y <= ld_x.DB_MAX_OUTPUT_PORT_TYPE
menu_enable <= menu_enable.DB_MAX_OUTPUT_PORT_TYPE
dino_frame_counter <= frame_counter.DB_MAX_OUTPUT_PORT_TYPE
draw_menu <= menu_enable.DB_MAX_OUTPUT_PORT_TYPE
ld_menu <= ld_menu.DB_MAX_OUTPUT_PORT_TYPE
ld_ground <= ld_menu.DB_MAX_OUTPUT_PORT_TYPE
enable_count_ground <= enable_count_ground.DB_MAX_OUTPUT_PORT_TYPE
draw_ground <= enable_count_ground.DB_MAX_OUTPUT_PORT_TYPE
writeEn <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
draw <= frame_counter.DB_MAX_OUTPUT_PORT_TYPE
count_enable <= count_enable.DB_MAX_OUTPUT_PORT_TYPE
is_erase <= is_erase.DB_MAX_OUTPUT_PORT_TYPE
is_change <= is_change.DB_MAX_OUTPUT_PORT_TYPE
frame_counter <= frame_counter.DB_MAX_OUTPUT_PORT_TYPE


|Project|lfsr:r0
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
rst => out[0]~reg0.ACLR
rst => out[1]~reg0.ACLR
rst => out[2]~reg0.ACLR
rst => out[3]~reg0.ACLR


|Project|hex_decoder:H0
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Project|hex_decoder:H1
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Project|hex_decoder:H2
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Project|hex_decoder:H3
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


